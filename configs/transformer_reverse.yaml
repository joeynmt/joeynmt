# Reverse Experiment
# See https://joeynmt.readthedocs.io/en/stable/tutorial.html
#
# - generate data with 
#
#     $ python scripts/generate_reverse_task.py
#
name: "reverse_experiment_transformer"
joeynmt_version: "2.3.0"
model_dir: "models/reverse_transformer"
use_cuda: True
fp16: True
random_seed: 42
    
data:
    train: "test/data/reverse/train"
    dev: "test/data/reverse/dev"
    test: "test/data/reverse/test"
    dataset_type: "plain"
    sample_train_subset: 40000
    sample_dev_subset: 400
    src:
        lang: "src"
        max_length: 25
        level: "word"
        voc_limit: 100
        voc_min_freq: 0
    trg:
        lang: "trg"
        max_length: 25
        level: "word"
        voc_limit: 100
        voc_min_freq: 0
    special_symbols:
        unk_token: "<unk>"
        unk_id: 0
        pad_token: "<pad>"
        pad_id: 1
        bos_token: "<s>"
        bos_id: 2
        eos_token: "</s>"
        eos_id: 3

testing:
    #load_model: "models/reverse_transformer/best.ckpt"
    n_best: 2
    beam_size: 2
    beam_alpha: 1.0
    eval_metrics: ["bleu"]
    max_output_length: 30
    batch_size: 32
    batch_type: "sentence"
    return_prob: "hyp"
    sacrebleu_cfg:
        tokenize: "13a"

training:
    #load_model: "models/reverse_transformer/best.ckpt"
    optimizer: "adamw"
    learning_rate: 0.001
    learning_rate_min: 0.0002
    weight_decay: 0.0
    clip_grad_norm: 1.0
    batch_size: 32
    batch_type: "sentence"
    batch_multiplier: 2
    scheduling: "plateau"
    patience: 5
    decrease_factor: 0.5
    early_stopping_metric: "bleu"
    epochs: 5
    validation_freq: 1000
    logging_freq: 100
    shuffle: True
    print_valid_sents: [0, 3, 6]
    keep_best_ckpts: 2
    overwrite: True

model:
    initializer: "xavier_uniform"
    init_gain: 1.0
    bias_initializer: "zeros"
    embed_initializer: "xavier_uniform"
    embed_init_gain: 1.0
    tied_embeddings: True
    tied_softmax: True
    encoder:
        type: "transformer"
        num_layers: 2
        num_heads: 4
        embeddings:
            embedding_dim: 64
            scale: True
        # typically ff_size = 4 x hidden_size
        hidden_size: 64
        ff_size: 256
        dropout: 0.1
        layer_norm: "pre"
        activation: "relu"
    decoder:
        type: "transformer"
        num_layers: 2
        num_heads: 4
        embeddings:
            embedding_dim: 64
            scale: True
        # typically ff_size = 4 x hidden_size
        hidden_size: 64
        ff_size: 256
        dropout: 0.1
        layer_norm: "pre"
        activation: "relu"
